fork
 state fork (多个节点同时挖到矿，临时性的分叉)
 	* forking attack
 	* deliberate fork
 
 protocal fork （协议发生变化，假设大多数节点升级）
 	* hard fork
 	* soft fork

=======================================
hard fork

block size limit

1M -> 4M (大多数算力更新)

** 旧节点不认可新节点的区块，新节点认可旧节点的区块 **

只要旧节点不更新软件，分叉就不会消失
-----------------------------------

社区分裂，分成两个币，分叉前的区块两个链都承认
问题：交易回放，一条链上的交易在另一条链上回放（因为私钥一样）
先交易，再退款，然后在另一条链上回放退款交易

解决方法：chain id

========================================

soft fork（临时性的）

对协议加一些限制

example：1M -> 0.5M (大多数算力更新)

旧节点认可新节点，新节点不认可旧节点挖的区块

因为旧节点认可新节点挖出来的区块，旧节点可以沿着新节点的区块挖，但是新节点认可旧节点挖的区块，新节点算力强，旧节点如果不升级，工作就一直白做了


总结：（大多数升级的情况）
* 旧协议不认可新协议，新协议认可旧协议：硬分叉
* 旧协议认新协议，新协议不认可旧协议：软分叉

=======================================
实例

有人提议把 UTXO 的根 hash 值写到 coinbase 域的某个位置

用于证明某个账户的钱

软分叉

---
软分叉的例子 Pay to Script Hash
